{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tsuna\\\\Downloads\\\\cpsc344\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Product from './Product';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [products, setProducts] = useState([{\n    id: 1,\n    name: \"boot jeans\",\n    color: \"blue\"\n  }, {\n    id: 2,\n    name: \"wide jeans\",\n    color: \"red\"\n  }, {\n    id: 3,\n    name: \"straight jeans\",\n    color: \"white\"\n  }]);\n  const [selectedColors, setSelectedColors] = useState([]);\n  const addColor = color => {\n    setSelectedColors(prevColors => {\n      // If the color is already selected, remove it, otherwise add it\n      if (prevColors.includes(color)) {\n        return prevColors.filter(c => c !== color);\n      } else {\n        return [...prevColors, color];\n      }\n    });\n  };\n  const filteredProducts = products.filter(product => selectedColors.length === 0 || selectedColors.includes(product.color));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Zara\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-grid\",\n      children: filteredProducts.map(product => /*#__PURE__*/_jsxDEV(Product, {\n        name: product.name,\n        color: product.color\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addColor(\"blue\"),\n      children: \"Toggle blue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addColor(\"white\"),\n      children: \"Toggle white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oseH8ez1nLPjA+i/j9R44LIjRQU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Product","jsxDEV","_jsxDEV","App","_s","products","setProducts","id","name","color","selectedColors","setSelectedColors","addColor","prevColors","includes","filter","c","filteredProducts","product","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tsuna/Downloads/cpsc344/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Product from './Product';\n\nfunction App() {\n  const [products, setProducts] = useState([\n    { id: 1, name: \"boot jeans\", color: \"blue\" },\n    { id: 2, name: \"wide jeans\", color: \"red\" },\n    { id: 3, name: \"straight jeans\", color: \"white\" }\n  ]);\n\n  const [selectedColors, setSelectedColors] = useState([]);\n\n  const addColor = (color) => {\n    setSelectedColors(prevColors => {\n      // If the color is already selected, remove it, otherwise add it\n      if (prevColors.includes(color)) {\n        return prevColors.filter(c => c !== color);\n      } else {\n        return [...prevColors, color];\n      }\n    });\n  };\n\n  const filteredProducts = products.filter(product => \n    selectedColors.length === 0 || selectedColors.includes(product.color)\n  );\n\n  return (\n    <div className=\"App\">\n      <h1>Zara</h1>\n      <div className=\"product-grid\">\n        {filteredProducts.map(product => (\n          <Product\n            key={product.id}\n            name={product.name}\n            color={product.color}\n          />\n        ))}\n      </div>\n      <button onClick={() => addColor(\"blue\")}>Toggle blue</button>\n      <button onClick={() => addColor(\"white\")}>Toggle white</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CACvC;IAAES,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,YAAY;IAAEC,KAAK,EAAE;EAAO,CAAC,EAC5C;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,YAAY;IAAEC,KAAK,EAAE;EAAM,CAAC,EAC3C;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,gBAAgB;IAAEC,KAAK,EAAE;EAAQ,CAAC,CAClD,CAAC;EAEF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMc,QAAQ,GAAIH,KAAK,IAAK;IAC1BE,iBAAiB,CAACE,UAAU,IAAI;MAC9B;MACA,IAAIA,UAAU,CAACC,QAAQ,CAACL,KAAK,CAAC,EAAE;QAC9B,OAAOI,UAAU,CAACE,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKP,KAAK,CAAC;MAC5C,CAAC,MAAM;QACL,OAAO,CAAC,GAAGI,UAAU,EAAEJ,KAAK,CAAC;MAC/B;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMQ,gBAAgB,GAAGZ,QAAQ,CAACU,MAAM,CAACG,OAAO,IAC9CR,cAAc,CAACS,MAAM,KAAK,CAAC,IAAIT,cAAc,CAACI,QAAQ,CAACI,OAAO,CAACT,KAAK,CACtE,CAAC;EAED,oBACEP,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA;MAAAmB,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbvB,OAAA;MAAKkB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BJ,gBAAgB,CAACS,GAAG,CAACR,OAAO,iBAC3BhB,OAAA,CAACF,OAAO;QAENQ,IAAI,EAAEU,OAAO,CAACV,IAAK;QACnBC,KAAK,EAAES,OAAO,CAACT;MAAM,GAFhBS,OAAO,CAACX,EAAE;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGhB,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNvB,OAAA;MAAQyB,OAAO,EAAEA,CAAA,KAAMf,QAAQ,CAAC,MAAM,CAAE;MAAAS,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7DvB,OAAA;MAAQyB,OAAO,EAAEA,CAAA,KAAMf,QAAQ,CAAC,OAAO,CAAE;MAAAS,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEV;AAACrB,EAAA,CAxCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}